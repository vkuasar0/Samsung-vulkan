#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage1;
layout (binding = 1, rgba8) uniform readonly image2D inputImage;
layout (binding = 2, rgba8) uniform image2D resultImage;

void main()
{   
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    vec2 scaleFactor = vec2(1.0, 0.5);

    ivec2 centerCoordinate = ivec2(pixelCoords);
    ivec2 oneStepLeftCoordinate = ivec2(pixelCoords.x - 1, pixelCoords.y);
    ivec2 twoStepsLeftCoordinate = ivec2(pixelCoords.x - 2, pixelCoords.y);
    ivec2 threeStepsLeftCoordinate = ivec2(pixelCoords.x - 3, pixelCoords.y);
    ivec2 fourStepsLeftCoordinate = ivec2(pixelCoords.x - 4, pixelCoords.y);
    ivec2 oneStepRightCoordinate = ivec2(pixelCoords.x + 1, pixelCoords.y);
    ivec2 twoStepsRightCoordinate = ivec2(pixelCoords.x + 2, pixelCoords.y);
    ivec2 threeStepsRightCoordinate = ivec2(pixelCoords.x + 3, pixelCoords.y);
    ivec2 fourStepsRightCoordinate = ivec2(pixelCoords.x + 4, pixelCoords.y);

    vec3 rgb = imageLoad(inputImage, centerCoordinate).rgb * 0.38026;  

    rgb += imageLoad(inputImage, oneStepLeftCoordinate).rgb * 0.27667;  
    rgb += imageLoad(inputImage, oneStepRightCoordinate).rgb * 0.27667;  

    rgb += imageLoad(inputImage, twoStepsLeftCoordinate).rgb * 0.08074;  
    rgb += imageLoad(inputImage, twoStepsRightCoordinate).rgb * 0.08074;  

    rgb += imageLoad(inputImage, threeStepsLeftCoordinate).rgb * -0.02612;  
    rgb += imageLoad(inputImage, threeStepsRightCoordinate).rgb * -0.02612;  

    rgb += imageLoad(inputImage, fourStepsLeftCoordinate).rgb * -0.02143;  
    rgb += imageLoad(inputImage, fourStepsRightCoordinate).rgb * -0.02143;  
                                    
    vec4 pixel = vec4(rgb, 1.0);

    ivec2 outputCoords = ivec2(pixelCoords * scaleFactor);

    imageStore(resultImage, outputCoords, pixel);
}