#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 1, rgba8) uniform readonly image2D inputImage1;
layout (binding = 2, rgba8) uniform image2D resultImage;

void main()
{   
    ivec2 imgSize = imageSize(inputImage);

    // Define crop values within the shader
    float leftCrop = 0.1 * imgSize.x;
    float topCrop = 0.1 * imgSize.y;
    float rightCrop = 0.1 * imgSize.x;
    float bottomCrop = 0.1 * imgSize.y;

    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    // Adjust the coordinates based on the crop values
    if (pixelCoords.x >= leftCrop && pixelCoords.x < imgSize.x - rightCrop &&
        pixelCoords.y >= topCrop && pixelCoords.y < imgSize.y - bottomCrop) {
        
        vec3 rgb = imageLoad(inputImage, pixelCoords).rgb;           
        vec4 pixel = vec4(rgb, 1.0);
        
        imageStore(resultImage, pixelCoords, pixel);
    }
}
