#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 2, rgba8) uniform image2D resultImage;

float rThresh = 0.5;
float gThresh = 0.5;
float bThresh = 0.5;

void main()
{   
	  vec3 rgb = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.xy)).rgb;

	 if(rgb[0] < rThresh)
	 {
        rgb[0] = 1.0 - rgb[0];
	 }
	 if(rgb[1] < gThresh)
	 {
        rgb[1] = 1.0 - rgb[1];
	 }
	 if(rgb[2] < bThresh)
	 {
        rgb[2] = 1.0 - rgb[2];
	 }
   
	  vec4 res = vec4(vec3(rgb), 1.0);    

    imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), res);
                                       
}